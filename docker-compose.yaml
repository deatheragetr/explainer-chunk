services:
  backend:
    build:
      context: ./backend
    restart: unless-stopped
    depends_on:
      - mongo
      - redis
      - elasticsearch
    environment:
      - MONGO_URL=mongodb://root:${MONGO_PASSWORD}@mongo:27017/
      - MONGO_DB=explainer-chonk-prod
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - ES_URL=https://elasticsearch:9200
      - ES_USER=elastic
      - ES_PASSWORD=${ELASTIC_PASSWORD}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_REGION=${S3_REGION}
      - S3_DOCUMENT_BUCKET=${S3_DOCUMENT_BUCKET}
      - S3_PUBLIC_BUCKET=${S3_PUBLIC_BUCKET}
      - S3_HOST=${S3_HOST}
      - SECRET_KEY=${SECRET_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - POSTMARK_API_KEY=${POSTMARK_API_KEY}
      - DEFAULT_SENDER_EMAIL=${DEFAULT_SENDER_EMAIL}
      - API_BASE_URL=${API_BASE_URL}
      - APP_BASE_URL=${APP_BASE_URL}
      - PATH_TO_GEOIP_DB=${PATH_TO_GEOIP_DB}
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000

  huey-worker:
    build:
      context: ./backend
    restart: unless-stopped
    depends_on:
      - mongo
      - redis
      - elasticsearch
      - backend
    environment:
      - MONGO_URL=mongodb://root:${MONGO_PASSWORD}@mongo:27017/
      - MONGO_DB=explainer-chonk-prod
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - ES_URL=https://elasticsearch:9200
      - ES_USER=elastic
      - ES_PASSWORD=${ELASTIC_PASSWORD}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_REGION=${S3_REGION}
      - S3_DOCUMENT_BUCKET=${S3_DOCUMENT_BUCKET}
      - S3_PUBLIC_BUCKET=${S3_PUBLIC_BUCKET}
      - S3_HOST=${S3_HOST}
      - SECRET_KEY=${SECRET_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PATH_TO_GEOIP_DB=${PATH_TO_GEOIP_DB}
      - POSTMARK_API_KEY=${POSTMARK_API_KEY}
      - DEFAULT_SENDER_EMAIL=${DEFAULT_SENDER_EMAIL}
    volumes:
      - ./backend:/app
    command: python -m huey.bin.huey_consumer main.huey

  mongo:
    image: mongo:latest
    restart: unless-stopped
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: explainer-chonk-prod

  redis:
    image: redis/redis-stack:7.2.0-v10
    restart: unless-stopped
    volumes:
      - redis-data:/data/redis

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - backend
    restart: unless-stopped

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - nginx
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  mongo-data:
  redis-data:
  elasticsearch-data:
